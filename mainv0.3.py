



import machine
from machine import Pin
import neopixel
import time

long=256
ancho=8

machine.freq(160000000)
np = neopixel.NeoPixel(machine.Pin(4),long)
np1=neopixel.NeoPixel(machine.Pin(0),long)
direccion = Pin(16,Pin.IN)

dir=direccion.value()
iluminacionLevel=125
ma=[]
b=0

D=[0, 0, 0, 0, 0, 0, 0, 0, # Flecha a la derecha
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 64, 62, 62, 64, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 61, 62, 62, 61, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0, 
    0, 0, 62, 62, 62, 62, 0, 0,
    62, 62, 64, 62, 62, 64, 62, 62,
    0, 62, 62, 62, 62, 62, 62, 0, 
    0, 0, 60, 62, 62, 60, 0, 0,
    0, 0, 0, 62, 62, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0]

I=[ 0, 0, 0, 0, 0, 0, 0, 0, # Flecha a la izquierda
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 62, 62, 0, 0, 0,
    0, 0, 60, 62, 62, 60, 0, 0,
    0, 62, 62, 62, 62, 62, 62, 0,
    62, 62, 64, 62, 62, 64, 62, 62, 
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 64, 62, 62, 64, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 61, 62, 62, 61, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 62, 62, 62, 62, 0, 0, 
    0, 0, 62, 62, 62, 62, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0]
    
exit=[235,   244,   255,   255,   252,   255,   254,  240,
      244,   250,   255,   255,   255,   253,   253,   253,
      245,   252,   255,   236,   253,   232,   245,   255,
      254,   255,   255,   239,   255,   230,   249,   255,
      255,   255,   255,   255,   254,   245,   255,   255,
      0,     3,   26,    75,     0,     2,     0,     0,
      26,   244,   255,   201,    13,   255,   240,    14,
      12,   232,   255,   240,     0,   255,   234,     0,
      0,   254,   255,   255,   237,   255,   253,     5,
      241,   255,   255,   230,   255,   251,   255,   249,
      252,   242,   255,   235,   255,   255,   252,   241,
      3,    16,     0,   255,   227,     4,    20,     0,
      235,   255,   231,    10,   238,    24,   255,   255,
      234,   255,   224,   229,     0,   234,   252,   240,
      255,   244,   255,     6,   255,    23,   255,   255,
      12,    0,    65,   255,   245,     0,    1,     0,
      255,   255,   247,   255,   255,   255,   255,   255,
      0,   255,   242,   255,   255,   236,   255,     3,
      18,   233,   255,   242,   228,  230,   223,    32,
      0,     0,    18,    15,     0,     0,     0,    10,
      11,   251,   255,   255,   254,  250,   255,    45,
      0,    252,   255,   255,   255,   255,   253,     0,
      255,   255,   233,   250,   255,   237,   244,   217,
      255,   255,   242,   253,   255,   241,   229,    51,
      255,   239,   250,   255,   237,   255,   240,     8,
      17,     26,    18,    24,     0,     4,    34,     0,
      255,   255,   255,   255,   246,   253,   218,    44,
      248,   243,   246,   254,   221,   243,   232,    67,
      237,   254,   234,   253,   248,   226,   255,   255,
      250,   255,   235,   255,   255,   244,   251,   223,
      255,   255,   255,   255,   255,   255,   255,   218,
      255,   255,   239,   255,   255,   213,   245,   255]


for i in range(0,long,1):
    if exit[i]<200:
      exit[i]=iluminacionLevel+10
    if exit[i]>200:
      exit[i]=0
      
for i in range(0,long,1):
    if D[i]>0:
      D[i]=iluminacionLevel

for i in range(0,long,1):
    if I[i]>0:
      I[i]=iluminacionLevel   
    
for i in range(0,long,1): # Se selecciona la iluminacion de las indicaciones.
    if D[i]>0:
      D[i]=iluminacionLevel
    if I[i]<0:
      I[i]=iluminacionLevel
      
for i in range(0,long,1): #Inicializa el vector ma de long componentes.
    ma.append(0)
  
while True:
    if direccion.value()!=dir:
      dir=direccion.value()
    #Desplaza izquierda si dir=0.
    if dir==0:
      for i in range(0,long-b,1):
        ma[i]=I[i-long+b]
      for i in range(long-b,long,1):
        ma[i]=I[i-long+b+ancho]
      b=b+ancho
      if b>=long:
        b=0 
    #-------------------------------
    if dir==1:#Desplaza derecha si dir=1.
      if b>=long:
        b=0
      for i in range(0,long-b,1):
        ma[i-long+b]=D[i]
      for i in range(long-b,long,1):
        ma[i-long+b-ancho]=D[i]
      b=b+8  
     #------------------------------     
    # Pinta en pantalla 1----------------
    i=0
    e=ancho-1
    a=ancho
    while a<long:
      while i<a:
        np[i]=(0,ma[e],0)
        i=i+1
        e=e-1
      for h in range(i,i+ancho,1):
        np[h]=(0,ma[h],0)
      i=i+ancho
      e=i+ancho-1
      a=e+1
    np.write()
    # Pinta en pantalla 2----------------
    i=0
    e=ancho-1
    a=ancho
    while a<long:
      while i<a:
        np1[i]=(0,exit[e],0)
        i=i+1
        e=e-1
      for h in range(i,i+ancho,1):
        np1[h]=(0,exit[h],0)
      i=i+ancho
      e=i+ancho-1
      a=e+1
    np1.write()
